// <auto-generated />
using EntityFramework.Configuracao;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(ContextoBase))]
    partial class ContextoBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Contextos.Jogos.Jogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_JOGO")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NM_JOGO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SituacaoId")
                        .HasColumnName("IN_SITUACAO")
                        .HasColumnType("bigint");

                    b.Property<short>("Status")
                        .HasColumnName("IN_STATUS")
                        .HasColumnType("smallint");

                    b.Property<long>("TipoJogoId")
                        .HasColumnName("IN_TIPO_JOGO")
                        .HasColumnType("bigint");

                    b.Property<long>("TipoPlataformaId")
                        .HasColumnName("IN_TIPO_PLATAFORMA")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioId")
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoJogoId");

                    b.HasIndex("TipoPlataformaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_JOGOS");
                });

            modelBuilder.Entity("Dominio.Contextos.Jogos.SituacaoJogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_SITUACAO")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DS_SITUACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("TB_SITUACAO_JOGO");
                });

            modelBuilder.Entity("Dominio.Contextos.Jogos.TipoJogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO_JOGO")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DS_TIPO_JOGO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("TB_TIPO_JOGO");
                });

            modelBuilder.Entity("Dominio.Contextos.Jogos.TipoPlataforma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PLATAFORMA")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DS_PLATAFORMA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("TB_TIPO_PLATAFORMA");
                });

            modelBuilder.Entity("Dominio.Contextos.Usuarios.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USUARIO")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NM_NOME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PodeTerAcessoAoSistema")
                        .HasColumnName("IN_PODE_TER_ACESSO")
                        .HasColumnType("bit");

                    b.Property<int>("QuantidadeJogosEmprestados")
                        .HasColumnName("IN_QTDE_JOGOS_EMPRESTADOS")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnName("IN_STATUS")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("Dominio.Contextos.Jogos.Jogo", b =>
                {
                    b.HasOne("Dominio.Contextos.Jogos.SituacaoJogo", "Situacao")
                        .WithMany("SituacaoDeJogo")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.Contextos.Jogos.TipoJogo", "TipoJogo")
                        .WithMany("TipoDeJogo")
                        .HasForeignKey("TipoJogoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.Contextos.Jogos.TipoPlataforma", "TipoPlataforma")
                        .WithMany("TipoDePlataforma")
                        .HasForeignKey("TipoPlataformaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.Contextos.Usuarios.Usuario", "UsuarioQueEstaComOJogo")
                        .WithMany("UsuarioComJogo")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
